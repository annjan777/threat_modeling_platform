from django.shortcuts import render, redirect, get_object_or_404
from django.contrib.auth import authenticate, login, logout
from django.contrib.auth.forms import UserCreationForm
from django.http import HttpResponse
from django.contrib import messages
from .utils.exploit_simulation import simulate_exploit, simulate_sql_injection, simulate_xss
from .utils.vulnerability_scanner import scan_for_vulnerabilities, check_sql_injection, check_xss
from .utils.report_generator import generate_report
from .models import ScanResult

def index(request):
    return render(request, "exploits/index.html")

def dashboard(request):
    if not request.user.is_authenticated:
        return redirect('login')
    scans = ScanResult.objects.filter(user=request.user)
    return render(request, "exploits/dashboard.html", {'scans': scans})

def run_scan(request):
    if not request.user.is_authenticated:
        return redirect('login')
    
    if request.method == 'POST':
        target = request.POST.get('target')

        # Validate target URL
        if not target or not target.startswith(('http://', 'https://')):
            messages.error(request, "Invalid target URL.")
            return redirect('run_scan')

        vulnerabilities = scan_for_vulnerabilities(target)
        generate_report(vulnerabilities)

        ScanResult.objects.create(
            user=request.user,
            target=target,
            vulnerabilities="\n".join(vulnerabilities)
        )

        messages.success(request, "Scan completed successfully.")
        return redirect('dashboard')
    
    return render(request, "exploits/run_scan.html")

def scan_results(request, scan_id):
    if not request.user.is_authenticated:
        return redirect('login')

    scan = get_object_or_404(ScanResult, id=scan_id, user=request.user)
    return render(request, "exploits/scan_results.html", {'scan': scan})

def register(request):
    if request.user.is_authenticated:
        return redirect('dashboard')

    if request.method == 'POST':
        form = UserCreationForm(request.POST)
        if form.is_valid():
            form.save()
            messages.success(request, "Registration successful. Please log in.")
            return redirect('login')
        else:
            messages.error(request, "Registration failed. Please correct the errors below.")
    else:
        form = UserCreationForm()
    
    return render(request, 'exploits/register.html', {'form': form})

def user_login(request):
    if request.user.is_authenticated:
        return redirect('dashboard')

    if request.method == 'POST':
        username = request.POST['username']
        password = request.POST['password']
        user = authenticate(request, username=username, password=password)

        if user is not None:
            login(request, user)
            messages.success(request, "Login successful.")
            return redirect('dashboard')
        else:
            messages.error(request, "Invalid username or password.")
    
    return render(request, 'exploits/login.html')

def user_logout(request):
    logout(request)
    messages.success(request, "You have been logged out.")
    return redirect('index')
